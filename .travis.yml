# Use new container infrastructure to enable caching
sudo: false

# Choose a lightweight base image; we provide our own build tools.
language: c

# GHC depends on GMP. You can add other dependencies here as well.
addons:
  apt:
    packages:
    - libgmp-dev

# The different configurations we want to test. You could also do things like
# change flags or use --stack-yaml to point to a different file.
env:
- ARGS=""
#- ARGS="--resolver lts-2"
#- ARGS="--resolver lts"
#- ARGS="--resolver nightly"

before_install:
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'

# This line does all of the work: installs GHC if necessary, builds the
# library, executables, and test suites, and runs the test suites.
# `--no-terminal works` around some quirks in Travis's terminal implementation.
script: |
  version=$(grep "^version" curl-runnings.cabal | sed 's/ //g'  | cut -d ':' -f 2) &&
  echo "building binary version $version" &&
  stack $ARGS --no-terminal --install-ghc --haddock install &&
  strip $HOME/.local/bin/curl-runnings &&
  tar -czvf $HOME/.local/bin/curl-runnings-$version.tar.gz $HOME/.local/bin/curl-runnings &&
  ln -s $HOME/.local/bin/curl-runnings-$version.tar.gz $HOME/.local/bin/curl-runnings.tar.gz

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.stack

addons:
  artifacts:
    s3_region: "us-west-2"
    paths:
      - $HOME/.local/bin/curl-runnings.tar.gz
    branch: master
